{"version":3,"sources":["Menu.js","About.js","RouteCreator.js","App.js","reportWebVitals.js","index.js"],"names":["OrangeHeader","styled","div","MainItem","NavLink","MobileMenuItem","Menu","props","state","isMobileMenuOpen","screenWidth","toggleMobileMenu","bind","resizeScreen","window","addEventListener","this","removeEventListener","innerWidth","setState","prevState","Fragment","className","menuItems","map","data","exact","to","path","activeClassName","name","id","onClick","aria-label","aria-expanded","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","Component","About","mapboxgl","accessToken","process","draw","ACTIVITIES","ActivityInput","RouteCreator","lng","lat","zoom","activity","distance","duration","clearMetricsAndLinesOnNextActivitySelectClick","drawRoute","createRoute","updateRoute","deleteRoute","getRouteMetrics","Map","container","routeCreatorMap","style","center","MapboxDraw","displayControlsDefault","controls","line_string","trash","addControl","on","e","clearMetricsOnNextActivitySelectClick","preventDefault","getAll","removeLayer","removeSource","coordinates","features","geometry","url","join","req","XMLHttpRequest","responseType","open","onload","jsonResponse","response","routes","toFixed","send","alert","points","addSource","addLayer","type","value","handleActivityClick","ref","MENU_ITEMS","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.144d231f.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\nimport tw from 'twin.macro';\nimport './index.css';\n\nconst OrangeHeader = styled.div`\n ${tw`text-neon-orange font-black uppercase text-3xl tracking-tighter`}\n`\nconst MainItem = styled(NavLink)`\n ${tw`ml-8 inline-flex items-center px-1 pt-1 leading-5 text-sm font-normal text-black hover:text-neon-orange transition duration-150 ease-in-out`}\n`\nconst MobileMenuItem = styled(NavLink)`\n ${tw`mt-1 block pl-3 pr-4 py-2 text-base font-normal text-black hover:text-neon-orange focus:outline-none transition duration-150 ease-in-out`}\n`\n\nclass Menu extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isMobileMenuOpen: false,\n            screenWidth: null\n        }\n        this.toggleMobileMenu = this.toggleMobileMenu.bind(this);\n        this.resizeScreen = this.resizeScreen.bind(this);\n    }\n    \n    componentDidMount() {\n        window.addEventListener(\"resize\", this.resizeScreen);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"resize\", this.resizeScreen)\n    }\n\n    resizeScreen() {\n        if (window.innerWidth > 600) {\n            this.setState({isMobileMenuOpen: false});\n        }\n\n    }\n\n    toggleMobileMenu() {\n        this.setState(prevState => ({isMobileMenuOpen: !prevState.isMobileMenuOpen}));\n    }\n    \n    render() {\n        return (\n            <React.Fragment>\n                <nav className=\"bg-white shadow\">\n                    <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n                        <div className=\"flex justify-between h-16\">\n                            <div className=\"flex\">\n                                <div className=\"flex-shrink-0 flex items-center\">\n                                    <OrangeHeader>Orange Lines</OrangeHeader>\n                                </div>\n                                <div className=\"hidden sm:ml-6 sm:flex\">\n                                    {this.props.menuItems.map((data) => {\n                                        return (\n                                            <MainItem exact to={data.path} activeClassName={\"activeMenuItem\"} className={\"mainMenuItem\"} key={data.id}>{data.name}</MainItem>\n                                        );\n                                    })}\n                                </div>\n                            </div>\n                            <div className=\"-mr-2 flex items-center sm:hidden\" onClick={this.toggleMobileMenu}>\n                                <button\n                                    className=\"inline-flex items-center justify-center p-2 rounded-md text-gray-400 hover:text-gray-500 hover:bg-gray-100 focus:outline-none focus:bg-gray-100 focus:text-gray-500 transition duration-150 ease-in-out\"\n                                    aria-label=\"Main menu\" aria-expanded=\"false\">\n                                    <svg className=\"block h-6 w-6\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\"\n                                         viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\"\n                                              d=\"M4 6h16M4 12h16M4 18h16\"/>\n                                    </svg>\n                                    <svg className=\"hidden h-6 w-6\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\"\n                                         viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\"\n                                              d=\"M6 18L18 6M6 6l12 12\"/>\n                                    </svg>\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                    <div className={`${this.state.isMobileMenuOpen ? \"block sm:block\" : \"hidden sm:hidden\"}`}>\n                        <div className=\"pt-2 pb-3\">\n                            {this.props.menuItems.map((data) => {\n                                return (\n                                    <MobileMenuItem exact to={data.path} activeClassName={\"activeMenuItem\"} className={\"mobileMenuItem\"} key={data.id + 'Mobile'}>{data.name}</MobileMenuItem>\n                                );\n                            })}\n                        </div>\n                    </div>\n                </nav>\n            </React.Fragment>\n        )\n    }\n     \n}\nexport default Menu;\n","import React, {Component} from 'react';\n\nclass About extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        }\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <div className=\"max-w overflow-hidden\">\n                    <div className=\"px-6 py-4\">\n                        <div className=\"font-light text-xl mb-2\">Strive for growth.</div>\n                        <p className=\"font-light text-gray-700 text-base\">\n                            Orange Lines is a React web app which uses the MapBox API. It is inspired by Strava, an exercise app which connects me to others and motivates me to push my limits. Developed by Karmen Lu.\n                        </p>\n                    </div>\n                </div>\n            </React.Fragment>\n        )\n    }\n\n}\nexport default About;\n","import React, {Component} from 'react';\nimport styled from 'styled-components';\nimport tw from 'twin.macro';\nimport mapboxgl from 'mapbox-gl';\nimport MapboxDraw from '@mapbox/mapbox-gl-draw';\nimport \"@mapbox/mapbox-gl-draw/dist/mapbox-gl-draw.css\";\nimport './index.css';\n\nmapboxgl.accessToken = process.env.REACT_APP_MAPBOX_API_KEY;\n\nconst NEON_ORANGE = \"#FF6600\"\nconst ACTIVITIES = [\n    {name: \"Walking\", path: \"walking\", id: \"a1\"},\n    {name: \"Cycling\", path: \"cycling\", id: \"a2\"},\n    {name: \"Driving\", path: \"driving\", id: \"a3\"}];\nconst ActivityInput = styled.div`\n ${tw`bg-white text-gray-800 border-opacity-0 border-0 hover:border-2 hover:border-yellow-orange hover:text-yellow-orange font-normal py-2 px-4 m-3 rounded`}\n`\nvar map;\nvar draw;\n\nclass RouteCreator extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            lng: -71,\n            lat: 43,\n            zoom: 8.5,\n            activity: null,\n            distance: 0,\n            duration: 0,\n            clearMetricsAndLinesOnNextActivitySelectClick: false\n        }\n\n        this.drawRoute = this.drawRoute.bind(this);\n        this.createRoute = this.createRoute.bind(this);\n        this.updateRoute = this.updateRoute.bind(this);\n        this.deleteRoute = this.deleteRoute.bind(this);\n        this.getRouteMetrics = this.getRouteMetrics.bind(this);\n    }\n\n    componentDidMount() {\n        map = new mapboxgl.Map({\n            container: this.routeCreatorMap,\n            style: 'mapbox://styles/klu17/ckh98gx7u2tdf19lgx2mpx3k7',\n            center: [this.state.lng, this.state.lat],\n            zoom: this.state.zoom\n        });\n\n        draw = new MapboxDraw({\n            displayControlsDefault: false,\n            controls: {\n                line_string: true,\n                trash: true\n            }\n        });\n\n        map.addControl(draw, \"top-left\");\n        map.on('draw.create', this.createRoute);\n        map.on('draw.delete', this.deleteRoute);\n        map.on('draw.update', this.updateRoute);\n    }\n\n    handleActivityClick(e, data) {\n        if(this.state.clearMetricsOnNextActivitySelectClick) {\n            this.setState({distance: 0, duration: 0, clearMetricsOnNextActivitySelectClick: false});\n            this.deleteRoute();\n        }\n        this.setState({activity: data.path});\n        e.preventDefault();\n    }\n\n    updateRoute(e) {\n        let data = draw.getAll();\n        map.removeLayer('route').removeSource('route');\n        const coordinates = data.features[0].geometry.coordinates;\n        this.drawRoute(coordinates);\n        this.getRouteMetrics(coordinates);\n    }\n\n    getRouteMetrics(data) {\n        if (this.state.activity) {\n            var url = 'https://api.mapbox.com/directions/v5/mapbox/' + this.state.activity + '/' + data.join(';') + '?geometries=geojson&steps=true&&access_token=' + mapboxgl.accessToken;\n            var req = new XMLHttpRequest();\n            req.responseType = 'json';\n            req.open('GET', url, true);\n            req.onload = function () {\n                var jsonResponse = req.response;\n                var distance = jsonResponse.routes[0].distance * 0.001; // convert to km\n                var duration = jsonResponse.routes[0].duration / 60; // convert to minutes\n                this.setState({distance: distance.toFixed(2), duration: duration.toFixed(2)});\n            }.bind(this);\n            req.send();\n        } else {\n            alert(\"No activity was selected.\");\n            return;\n        }\n        this.setState({clearMetricsOnNextActivitySelectClick: true});\n    }\n\n    drawRoute(points) {\n        map.addSource('route', {\n            'type': 'geojson',\n            'data': {\n                'type': 'Feature',\n                'properties': {},\n                'geometry': {\n                    'type': 'LineString',\n                    'coordinates': points\n                }\n            }\n        });\n        map.addLayer({\n            'id': 'route',\n            'type': 'line',\n            'source': 'route',\n            'layout': {\n                'line-join': 'round',\n                'line-cap': 'round'\n            },\n            'paint': {\n                'line-color': NEON_ORANGE,\n                'line-width': 6\n            }\n        });\n    }\n\n    createRoute(e) {\n        let data = draw.getAll();\n        const coordinates = data.features[0].geometry.coordinates;\n        this.drawRoute(coordinates);\n        this.getRouteMetrics(coordinates);\n    }\n\n    deleteRoute(e) {\n        let data = draw.getAll();\n        map.removeLayer('route').removeSource('route');\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <div className=\"max-w overflow-hidden\">\n                    <div className=\"px-6 py-4\">\n                        <div className=\"font-light text-xl mb-2\">Create a route.</div>\n                        <p className=\"font-light text-gray-700 text-base\">\n                            Select your activity. Draw your route. Submit.\n                        </p>\n                        <div className=\"activityMenu flex items-center\">\n                            {ACTIVITIES.map((data) => {\n                                return (\n                                    <ActivityInput\n                                        className={this.state.activity === data.path ? 'selectedActivityInput' : null}\n                                        key={data.id} type=\"radio\" id={data.id}\n                                        name=\"activity\" value={data.path}\n                                        onClick={(e) => this.handleActivityClick(e, data)}>{data.name}</ActivityInput>\n                                )\n                            })}\n                        </div>\n                    </div>\n                </div>\n                <div className=\"routeCreatorMapContainer\">\n                    <div ref={e => this.routeCreatorMap = e} className=\"routeCreatorMap\"/>\n                </div>\n                <div className=\"max-w overflow-hidden metricsBox\">\n                    <div className=\"px-6 py-4\">\n                        <div className=\"font-light text-xl mb-2\">Route Metrics</div>\n                        <p className=\"font-light text-gray-700 text-base\">\n                            <span>Activity: <span className=\"capitalize\">{this.state.activity ? this.state.activity : \"- -\"}</span><br/>\n                            Distance: {this.state.distance ? this.state.distance : \"- -\"} km<br/>\n                            Duration: {this.state.duration ? this.state.duration : \"- -\"} minutes</span>\n                        </p>\n                    </div>\n                </div>\n            </React.Fragment>\n        )\n    }\n\n}\n\nexport default RouteCreator;\n","import React, {Component} from 'react';\nimport styled from 'styled-components';\nimport './App.css';\nimport Menu from './Menu';\nimport About from './About';\nimport RouteCreator from './RouteCreator';\nimport {Switch, Route} from \"react-router-dom\";\n\nconst MENU_ITEMS = [\n    {name: \"Create\", path: \"/orange-lines\", id: \"create\"},\n    {name: \"About\", path: \"/orange-lines/about\", id: \"about\"}\n]\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n    }\n    \n    render() {\n        return (\n            <div>\n                <Menu menuItems={MENU_ITEMS}/>\n                <Switch>\n                    <Route exact path={\"/orange-lines\"}>\n                        <RouteCreator/>\n                    </Route>\n                    <Route exact path={\"/orange-lines/about\"}>\n                        <About/>\n                    </Route>\n                </Switch>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './tailwind.output.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n    <BrowserRouter>\n        <React.StrictMode>\n            <App/>\n        </React.StrictMode>\n    </BrowserRouter>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}